# Generated by Django 4.2.4 on 2024-04-20 09:12

import User_profile.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
                ('first_name', models.CharField(default='NOTO User', max_length=20, null=True, verbose_name='first name')),
                ('last_name', models.CharField(default=' ', max_length=20, null=True, verbose_name='last name')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='username')),
                ('prof_image', models.ImageField(default='static/images/user.png', max_length=1000, upload_to=User_profile.models.set_profile_image)),
                ('bio', models.CharField(default='Hello', max_length=300, null=True)),
                ('college', models.CharField(default='THAPAR INSTITUTE OF ENGINEERING AND TECHNOLOGY', max_length=50)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('hide_email', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
